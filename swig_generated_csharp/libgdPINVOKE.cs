/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Imazen.LibGD.Native {

using System;
using System.Runtime.InteropServices;

class libgdPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("libgd", EntryPoint="SWIGRegisterExceptionCallbacks_libgd")]
    public static extern void SWIGRegisterExceptionCallbacks_libgd(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("libgd", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_libgd")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_libgd(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_libgd(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_libgd(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(libgdPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(libgdPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("libgd", EntryPoint="SWIGRegisterStringCallback_libgd")]
    public static extern void SWIGRegisterStringCallback_libgd(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_libgd(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static libgdPINVOKE() {
  }


  [DllImport("libgd", EntryPoint="CSharp_GD_H_get")]
  public static extern int GD_H_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_MAJOR_VERSION_get")]
  public static extern int GD_MAJOR_VERSION_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_MINOR_VERSION_get")]
  public static extern int GD_MINOR_VERSION_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_RELEASE_VERSION_get")]
  public static extern int GD_RELEASE_VERSION_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_EXTRA_VERSION_get")]
  public static extern string GD_EXTRA_VERSION_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_VERSION_STRING_get")]
  public static extern string GD_VERSION_STRING_get();

  [DllImport("libgd", EntryPoint="CSharp_gdMaxColors_get")]
  public static extern int gdMaxColors_get();

  [DllImport("libgd", EntryPoint="CSharp_gdAlphaMax_get")]
  public static extern int gdAlphaMax_get();

  [DllImport("libgd", EntryPoint="CSharp_gdAlphaOpaque_get")]
  public static extern int gdAlphaOpaque_get();

  [DllImport("libgd", EntryPoint="CSharp_gdAlphaTransparent_get")]
  public static extern int gdAlphaTransparent_get();

  [DllImport("libgd", EntryPoint="CSharp_gdRedMax_get")]
  public static extern int gdRedMax_get();

  [DllImport("libgd", EntryPoint="CSharp_gdGreenMax_get")]
  public static extern int gdGreenMax_get();

  [DllImport("libgd", EntryPoint="CSharp_gdBlueMax_get")]
  public static extern int gdBlueMax_get();

  [DllImport("libgd", EntryPoint="CSharp_gdEffectReplace_get")]
  public static extern int gdEffectReplace_get();

  [DllImport("libgd", EntryPoint="CSharp_gdEffectAlphaBlend_get")]
  public static extern int gdEffectAlphaBlend_get();

  [DllImport("libgd", EntryPoint="CSharp_gdEffectNormal_get")]
  public static extern int gdEffectNormal_get();

  [DllImport("libgd", EntryPoint="CSharp_gdEffectOverlay_get")]
  public static extern int gdEffectOverlay_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_TRUE_get")]
  public static extern int GD_TRUE_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_FALSE_get")]
  public static extern int GD_FALSE_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_EPSILON_get")]
  public static extern double GD_EPSILON_get();

  [DllImport("libgd", EntryPoint="CSharp_M_PI_get")]
  public static extern double M_PI_get();

  [DllImport("libgd", EntryPoint="CSharp_gdAlphaBlend")]
  public static extern int gdAlphaBlend(int jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_pixels_set")]
  public static extern void gdImage_pixels_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_pixels_get")]
  public static extern IntPtr gdImage_pixels_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_sx_set")]
  public static extern void gdImage_sx_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_sx_get")]
  public static extern int gdImage_sx_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_sy_set")]
  public static extern void gdImage_sy_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_sy_get")]
  public static extern int gdImage_sy_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_colorsTotal_set")]
  public static extern void gdImage_colorsTotal_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_colorsTotal_get")]
  public static extern int gdImage_colorsTotal_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_red_set")]
  public static extern void gdImage_red_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_red_get")]
  public static extern IntPtr gdImage_red_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_green_set")]
  public static extern void gdImage_green_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_green_get")]
  public static extern IntPtr gdImage_green_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_blue_set")]
  public static extern void gdImage_blue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_blue_get")]
  public static extern IntPtr gdImage_blue_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_open_set")]
  public static extern void gdImage_open_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_open_get")]
  public static extern IntPtr gdImage_open_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_transparent_set")]
  public static extern void gdImage_transparent_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_transparent_get")]
  public static extern int gdImage_transparent_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_polyInts_set")]
  public static extern void gdImage_polyInts_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_polyInts_get")]
  public static extern IntPtr gdImage_polyInts_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_polyAllocated_set")]
  public static extern void gdImage_polyAllocated_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_polyAllocated_get")]
  public static extern int gdImage_polyAllocated_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_brush_set")]
  public static extern void gdImage_brush_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_brush_get")]
  public static extern IntPtr gdImage_brush_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tile_set")]
  public static extern void gdImage_tile_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tile_get")]
  public static extern IntPtr gdImage_tile_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_brushColorMap_set")]
  public static extern void gdImage_brushColorMap_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_brushColorMap_get")]
  public static extern IntPtr gdImage_brushColorMap_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tileColorMap_set")]
  public static extern void gdImage_tileColorMap_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tileColorMap_get")]
  public static extern IntPtr gdImage_tileColorMap_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_styleLength_set")]
  public static extern void gdImage_styleLength_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_styleLength_get")]
  public static extern int gdImage_styleLength_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_stylePos_set")]
  public static extern void gdImage_stylePos_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_stylePos_get")]
  public static extern int gdImage_stylePos_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_style_set")]
  public static extern void gdImage_style_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_style_get")]
  public static extern IntPtr gdImage_style_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interlace_set")]
  public static extern void gdImage_interlace_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interlace_get")]
  public static extern int gdImage_interlace_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_thick_set")]
  public static extern void gdImage_thick_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_thick_get")]
  public static extern int gdImage_thick_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_alpha_set")]
  public static extern void gdImage_alpha_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_alpha_get")]
  public static extern IntPtr gdImage_alpha_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_trueColor_set")]
  public static extern void gdImage_trueColor_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_trueColor_get")]
  public static extern int gdImage_trueColor_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tpixels_set")]
  public static extern void gdImage_tpixels_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_tpixels_get")]
  public static extern IntPtr gdImage_tpixels_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_alphaBlendingFlag_set")]
  public static extern void gdImage_alphaBlendingFlag_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_alphaBlendingFlag_get")]
  public static extern int gdImage_alphaBlendingFlag_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_saveAlphaFlag_set")]
  public static extern void gdImage_saveAlphaFlag_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_saveAlphaFlag_get")]
  public static extern int gdImage_saveAlphaFlag_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_set")]
  public static extern void gdImage_AA_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_get")]
  public static extern int gdImage_AA_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_color_set")]
  public static extern void gdImage_AA_color_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_color_get")]
  public static extern int gdImage_AA_color_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_dont_blend_set")]
  public static extern void gdImage_AA_dont_blend_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_AA_dont_blend_get")]
  public static extern int gdImage_AA_dont_blend_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cx1_set")]
  public static extern void gdImage_cx1_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cx1_get")]
  public static extern int gdImage_cx1_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cy1_set")]
  public static extern void gdImage_cy1_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cy1_get")]
  public static extern int gdImage_cy1_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cx2_set")]
  public static extern void gdImage_cx2_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cx2_get")]
  public static extern int gdImage_cx2_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cy2_set")]
  public static extern void gdImage_cy2_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_cy2_get")]
  public static extern int gdImage_cy2_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_res_x_set")]
  public static extern void gdImage_res_x_set(HandleRef jarg1, uint jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_res_x_get")]
  public static extern uint gdImage_res_x_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_res_y_set")]
  public static extern void gdImage_res_y_set(HandleRef jarg1, uint jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_res_y_get")]
  public static extern uint gdImage_res_y_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMethod_set")]
  public static extern void gdImage_paletteQuantizationMethod_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMethod_get")]
  public static extern int gdImage_paletteQuantizationMethod_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationSpeed_set")]
  public static extern void gdImage_paletteQuantizationSpeed_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationSpeed_get")]
  public static extern int gdImage_paletteQuantizationSpeed_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMinQuality_set")]
  public static extern void gdImage_paletteQuantizationMinQuality_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMinQuality_get")]
  public static extern int gdImage_paletteQuantizationMinQuality_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMaxQuality_set")]
  public static extern void gdImage_paletteQuantizationMaxQuality_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_paletteQuantizationMaxQuality_get")]
  public static extern int gdImage_paletteQuantizationMaxQuality_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interpolation_id_set")]
  public static extern void gdImage_interpolation_id_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interpolation_id_get")]
  public static extern int gdImage_interpolation_id_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interpolation_set")]
  public static extern void gdImage_interpolation_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImage_interpolation_get")]
  public static extern IntPtr gdImage_interpolation_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdImage")]
  public static extern IntPtr new_gdImage();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdImage")]
  public static extern void delete_gdImage(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdPointF_x_set")]
  public static extern void gdPointF_x_set(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdPointF_x_get")]
  public static extern double gdPointF_x_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdPointF_y_set")]
  public static extern void gdPointF_y_set(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdPointF_y_get")]
  public static extern double gdPointF_y_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdPointF")]
  public static extern IntPtr new_gdPointF();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdPointF")]
  public static extern void delete_gdPointF(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_nchars_set")]
  public static extern void gdFont_nchars_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_nchars_get")]
  public static extern int gdFont_nchars_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_offset_set")]
  public static extern void gdFont_offset_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_offset_get")]
  public static extern int gdFont_offset_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_w_set")]
  public static extern void gdFont_w_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_w_get")]
  public static extern int gdFont_w_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_h_set")]
  public static extern void gdFont_h_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_h_get")]
  public static extern int gdFont_h_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_data_set")]
  public static extern void gdFont_data_set(HandleRef jarg1, string jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFont_data_get")]
  public static extern string gdFont_data_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdFont")]
  public static extern IntPtr new_gdFont();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdFont")]
  public static extern void delete_gdFont(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdSetErrorMethod")]
  public static extern void gdSetErrorMethod(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdClearErrorMethod")]
  public static extern void gdClearErrorMethod();

  [DllImport("libgd", EntryPoint="CSharp_gdDashSize_get")]
  public static extern int gdDashSize_get();

  [DllImport("libgd", EntryPoint="CSharp_gdStyled_get")]
  public static extern int gdStyled_get();

  [DllImport("libgd", EntryPoint="CSharp_gdBrushed_get")]
  public static extern int gdBrushed_get();

  [DllImport("libgd", EntryPoint="CSharp_gdStyledBrushed_get")]
  public static extern int gdStyledBrushed_get();

  [DllImport("libgd", EntryPoint="CSharp_gdTiled_get")]
  public static extern int gdTiled_get();

  [DllImport("libgd", EntryPoint="CSharp_gdTransparent_get")]
  public static extern int gdTransparent_get();

  [DllImport("libgd", EntryPoint="CSharp_gdAntiAliased_get")]
  public static extern int gdAntiAliased_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreate")]
  public static extern IntPtr gdImageCreate(int jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateTrueColor")]
  public static extern IntPtr gdImageCreateTrueColor(int jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromPng")]
  public static extern IntPtr gdImageCreateFromPng(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromPngCtx")]
  public static extern IntPtr gdImageCreateFromPngCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromPngPtr")]
  public static extern IntPtr gdImageCreateFromPngPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGif")]
  public static extern IntPtr gdImageCreateFromGif(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGifCtx")]
  public static extern IntPtr gdImageCreateFromGifCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGifPtr")]
  public static extern IntPtr gdImageCreateFromGifPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWBMP")]
  public static extern IntPtr gdImageCreateFromWBMP(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWBMPCtx")]
  public static extern IntPtr gdImageCreateFromWBMPCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWBMPPtr")]
  public static extern IntPtr gdImageCreateFromWBMPPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpeg")]
  public static extern IntPtr gdImageCreateFromJpeg(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpegEx")]
  public static extern IntPtr gdImageCreateFromJpegEx(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpegCtx")]
  public static extern IntPtr gdImageCreateFromJpegCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpegCtxEx")]
  public static extern IntPtr gdImageCreateFromJpegCtxEx(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpegPtr")]
  public static extern IntPtr gdImageCreateFromJpegPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromJpegPtrEx")]
  public static extern IntPtr gdImageCreateFromJpegPtrEx(int jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWebp")]
  public static extern IntPtr gdImageCreateFromWebp(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWebpPtr")]
  public static extern IntPtr gdImageCreateFromWebpPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromWebpCtx")]
  public static extern IntPtr gdImageCreateFromWebpCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTiff")]
  public static extern IntPtr gdImageCreateFromTiff(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTiffCtx")]
  public static extern IntPtr gdImageCreateFromTiffCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTiffPtr")]
  public static extern IntPtr gdImageCreateFromTiffPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTga")]
  public static extern IntPtr gdImageCreateFromTga(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTgaCtx")]
  public static extern IntPtr gdImageCreateFromTgaCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromTgaPtr")]
  public static extern IntPtr gdImageCreateFromTgaPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromBmp")]
  public static extern IntPtr gdImageCreateFromBmp(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromBmpPtr")]
  public static extern IntPtr gdImageCreateFromBmpPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromBmpCtx")]
  public static extern IntPtr gdImageCreateFromBmpCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdSource_source_set")]
  public static extern void gdSource_source_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdSource_source_get")]
  public static extern IntPtr gdSource_source_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdSource_context_set")]
  public static extern void gdSource_context_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdSource_context_get")]
  public static extern IntPtr gdSource_context_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdSource")]
  public static extern IntPtr new_gdSource();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdSource")]
  public static extern void delete_gdSource(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromPngSource")]
  public static extern IntPtr gdImageCreateFromPngSource(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd")]
  public static extern IntPtr gdImageCreateFromGd(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGdCtx")]
  public static extern IntPtr gdImageCreateFromGdCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGdPtr")]
  public static extern IntPtr gdImageCreateFromGdPtr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2")]
  public static extern IntPtr gdImageCreateFromGd2(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2Ctx")]
  public static extern IntPtr gdImageCreateFromGd2Ctx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2Ptr")]
  public static extern IntPtr gdImageCreateFromGd2Ptr(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2Part")]
  public static extern IntPtr gdImageCreateFromGd2Part(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2PartCtx")]
  public static extern IntPtr gdImageCreateFromGd2PartCtx(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromGd2PartPtr")]
  public static extern IntPtr gdImageCreateFromGd2PartPtr(int jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromXbm")]
  public static extern IntPtr gdImageCreateFromXbm(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageXbmCtx")]
  public static extern void gdImageXbmCtx(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreateFromXpm")]
  public static extern IntPtr gdImageCreateFromXpm(string jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageDestroy")]
  public static extern void gdImageDestroy(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetPixel")]
  public static extern void gdImageSetPixel(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGetPixel")]
  public static extern int gdImageGetPixel(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGetTrueColorPixel")]
  public static extern int gdImageGetTrueColorPixel(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageAABlend")]
  public static extern void gdImageAABlend(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageLine")]
  public static extern void gdImageLine(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageDashedLine")]
  public static extern void gdImageDashedLine(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRectangle")]
  public static extern void gdImageRectangle(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFilledRectangle")]
  public static extern void gdImageFilledRectangle(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetClip")]
  public static extern void gdImageSetClip(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGetClip")]
  public static extern void gdImageGetClip(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetResolution")]
  public static extern void gdImageSetResolution(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageBoundsSafe")]
  public static extern int gdImageBoundsSafe(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageChar")]
  public static extern void gdImageChar(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCharUp")]
  public static extern void gdImageCharUp(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageString")]
  public static extern void gdImageString(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, HandleRef jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageStringUp")]
  public static extern void gdImageStringUp(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, HandleRef jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageString16")]
  public static extern void gdImageString16(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, HandleRef jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageStringUp16")]
  public static extern void gdImageStringUp16(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, HandleRef jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdFontCacheSetup")]
  public static extern int gdFontCacheSetup();

  [DllImport("libgd", EntryPoint="CSharp_gdFontCacheShutdown")]
  public static extern void gdFontCacheShutdown();

  [DllImport("libgd", EntryPoint="CSharp_gdFreeFontCache")]
  public static extern void gdFreeFontCache();

  [DllImport("libgd", EntryPoint="CSharp_gdImageStringTTF")]
  public static extern string gdImageStringTTF(HandleRef jarg1, HandleRef jarg2, int jarg3, string jarg4, double jarg5, double jarg6, int jarg7, int jarg8, string jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdImageStringFT")]
  public static extern string gdImageStringFT(HandleRef jarg1, HandleRef jarg2, int jarg3, string jarg4, double jarg5, double jarg6, int jarg7, int jarg8, string jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_flags_set")]
  public static extern void gdFTStringExtra_flags_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_flags_get")]
  public static extern int gdFTStringExtra_flags_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_linespacing_set")]
  public static extern void gdFTStringExtra_linespacing_set(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_linespacing_get")]
  public static extern double gdFTStringExtra_linespacing_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_charmap_set")]
  public static extern void gdFTStringExtra_charmap_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_charmap_get")]
  public static extern int gdFTStringExtra_charmap_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_hdpi_set")]
  public static extern void gdFTStringExtra_hdpi_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_hdpi_get")]
  public static extern int gdFTStringExtra_hdpi_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_vdpi_set")]
  public static extern void gdFTStringExtra_vdpi_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_vdpi_get")]
  public static extern int gdFTStringExtra_vdpi_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_xshow_set")]
  public static extern void gdFTStringExtra_xshow_set(HandleRef jarg1, string jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_xshow_get")]
  public static extern string gdFTStringExtra_xshow_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_fontpath_set")]
  public static extern void gdFTStringExtra_fontpath_set(HandleRef jarg1, string jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdFTStringExtra_fontpath_get")]
  public static extern string gdFTStringExtra_fontpath_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdFTStringExtra")]
  public static extern IntPtr new_gdFTStringExtra();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdFTStringExtra")]
  public static extern void delete_gdFTStringExtra(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_LINESPACE_get")]
  public static extern int gdFTEX_LINESPACE_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_CHARMAP_get")]
  public static extern int gdFTEX_CHARMAP_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_RESOLUTION_get")]
  public static extern int gdFTEX_RESOLUTION_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_DISABLE_KERNING_get")]
  public static extern int gdFTEX_DISABLE_KERNING_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_XSHOW_get")]
  public static extern int gdFTEX_XSHOW_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_FONTPATHNAME_get")]
  public static extern int gdFTEX_FONTPATHNAME_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_FONTCONFIG_get")]
  public static extern int gdFTEX_FONTCONFIG_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_RETURNFONTPATHNAME_get")]
  public static extern int gdFTEX_RETURNFONTPATHNAME_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTUseFontConfig")]
  public static extern int gdFTUseFontConfig(int jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_Unicode_get")]
  public static extern int gdFTEX_Unicode_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_Shift_JIS_get")]
  public static extern int gdFTEX_Shift_JIS_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_Big5_get")]
  public static extern int gdFTEX_Big5_get();

  [DllImport("libgd", EntryPoint="CSharp_gdFTEX_Adobe_Custom_get")]
  public static extern int gdFTEX_Adobe_Custom_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageStringFTEx")]
  public static extern string gdImageStringFTEx(HandleRef jarg1, HandleRef jarg2, int jarg3, string jarg4, double jarg5, double jarg6, int jarg7, int jarg8, string jarg9, HandleRef jarg10);

  [DllImport("libgd", EntryPoint="CSharp_gdPoint_x_set")]
  public static extern void gdPoint_x_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdPoint_x_get")]
  public static extern int gdPoint_x_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdPoint_y_set")]
  public static extern void gdPoint_y_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdPoint_y_get")]
  public static extern int gdPoint_y_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdPoint")]
  public static extern IntPtr new_gdPoint();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdPoint")]
  public static extern void delete_gdPoint(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_x_set")]
  public static extern void gdRect_x_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_x_get")]
  public static extern int gdRect_x_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_y_set")]
  public static extern void gdRect_y_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_y_get")]
  public static extern int gdRect_y_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_width_set")]
  public static extern void gdRect_width_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_width_get")]
  public static extern int gdRect_width_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_height_set")]
  public static extern void gdRect_height_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdRect_height_get")]
  public static extern int gdRect_height_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdRect")]
  public static extern IntPtr new_gdRect();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdRect")]
  public static extern void delete_gdRect(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePolygon")]
  public static extern void gdImagePolygon(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageOpenPolygon")]
  public static extern void gdImageOpenPolygon(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFilledPolygon")]
  public static extern void gdImageFilledPolygon(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorAllocate")]
  public static extern int gdImageColorAllocate(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorAllocateAlpha")]
  public static extern int gdImageColorAllocateAlpha(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorClosest")]
  public static extern int gdImageColorClosest(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorClosestAlpha")]
  public static extern int gdImageColorClosestAlpha(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorClosestHWB")]
  public static extern int gdImageColorClosestHWB(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorExact")]
  public static extern int gdImageColorExact(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorExactAlpha")]
  public static extern int gdImageColorExactAlpha(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorResolve")]
  public static extern int gdImageColorResolve(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorResolveAlpha")]
  public static extern int gdImageColorResolveAlpha(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorDeallocate")]
  public static extern void gdImageColorDeallocate(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCreatePaletteFromTrueColor")]
  public static extern IntPtr gdImageCreatePaletteFromTrueColor(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTrueColorToPalette")]
  public static extern int gdImageTrueColorToPalette(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePaletteToTrueColor")]
  public static extern int gdImagePaletteToTrueColor(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorMatch")]
  public static extern int gdImageColorMatch(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTrueColorToPaletteSetMethod")]
  public static extern int gdImageTrueColorToPaletteSetMethod(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTrueColorToPaletteSetQuality")]
  public static extern void gdImageTrueColorToPaletteSetQuality(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorTransparent")]
  public static extern void gdImageColorTransparent(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePaletteCopy")]
  public static extern void gdImagePaletteCopy(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorReplace")]
  public static extern int gdImageColorReplace(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorReplaceThreshold")]
  public static extern int gdImageColorReplaceThreshold(HandleRef jarg1, int jarg2, int jarg3, float jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorReplaceArray")]
  public static extern int gdImageColorReplaceArray(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColorReplaceCallback")]
  public static extern int gdImageColorReplaceCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGif")]
  public static extern void gdImageGif(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePng")]
  public static extern void gdImagePng(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngCtx")]
  public static extern void gdImagePngCtx(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifCtx")]
  public static extern void gdImageGifCtx(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTiff")]
  public static extern void gdImageTiff(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTiffPtr")]
  public static extern IntPtr gdImageTiffPtr(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageTiffCtx")]
  public static extern void gdImageTiffCtx(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageBmpPtr")]
  public static extern IntPtr gdImageBmpPtr(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageBmp")]
  public static extern void gdImageBmp(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageBmpCtx")]
  public static extern void gdImageBmpCtx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngEx")]
  public static extern void gdImagePngEx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngCtxEx")]
  public static extern void gdImagePngCtxEx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWBMP")]
  public static extern void gdImageWBMP(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWBMPCtx")]
  public static extern void gdImageWBMPCtx(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdFree")]
  public static extern void gdFree(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWBMPPtr")]
  public static extern IntPtr gdImageWBMPPtr(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageJpeg")]
  public static extern void gdImageJpeg(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageJpegCtx")]
  public static extern void gdImageJpegCtx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageJpegPtr")]
  public static extern IntPtr gdImageJpegPtr(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWebpEx")]
  public static extern void gdImageWebpEx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWebp")]
  public static extern void gdImageWebp(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWebpPtr")]
  public static extern IntPtr gdImageWebpPtr(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWebpPtrEx")]
  public static extern IntPtr gdImageWebpPtrEx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageWebpCtx")]
  public static extern void gdImageWebpCtx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdDisposalUnknown_get")]
  public static extern int gdDisposalUnknown_get();

  [DllImport("libgd", EntryPoint="CSharp_gdDisposalNone_get")]
  public static extern int gdDisposalNone_get();

  [DllImport("libgd", EntryPoint="CSharp_gdDisposalRestoreBackground_get")]
  public static extern int gdDisposalRestoreBackground_get();

  [DllImport("libgd", EntryPoint="CSharp_gdDisposalRestorePrevious_get")]
  public static extern int gdDisposalRestorePrevious_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimBegin")]
  public static extern void gdImageGifAnimBegin(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimAdd")]
  public static extern void gdImageGifAnimAdd(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, HandleRef jarg8);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimEnd")]
  public static extern void gdImageGifAnimEnd(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimBeginCtx")]
  public static extern void gdImageGifAnimBeginCtx(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimAddCtx")]
  public static extern void gdImageGifAnimAddCtx(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, HandleRef jarg8);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimEndCtx")]
  public static extern void gdImageGifAnimEndCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimBeginPtr")]
  public static extern IntPtr gdImageGifAnimBeginPtr(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimAddPtr")]
  public static extern IntPtr gdImageGifAnimAddPtr(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, HandleRef jarg8);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifAnimEndPtr")]
  public static extern IntPtr gdImageGifAnimEndPtr(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdSink_sink_set")]
  public static extern void gdSink_sink_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdSink_sink_get")]
  public static extern IntPtr gdSink_sink_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdSink_context_set")]
  public static extern void gdSink_context_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdSink_context_get")]
  public static extern IntPtr gdSink_context_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdSink")]
  public static extern IntPtr new_gdSink();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdSink")]
  public static extern void delete_gdSink(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngToSink")]
  public static extern void gdImagePngToSink(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGd")]
  public static extern void gdImageGd(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGd2")]
  public static extern void gdImageGd2(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGifPtr")]
  public static extern IntPtr gdImageGifPtr(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngPtr")]
  public static extern IntPtr gdImagePngPtr(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePngPtrEx")]
  public static extern IntPtr gdImagePngPtrEx(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGdPtr")]
  public static extern IntPtr gdImageGdPtr(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGd2Ptr")]
  public static extern IntPtr gdImageGd2Ptr(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdArc_get")]
  public static extern int gdArc_get();

  [DllImport("libgd", EntryPoint="CSharp_gdPie_get")]
  public static extern int gdPie_get();

  [DllImport("libgd", EntryPoint="CSharp_gdChord_get")]
  public static extern int gdChord_get();

  [DllImport("libgd", EntryPoint="CSharp_gdNoFill_get")]
  public static extern int gdNoFill_get();

  [DllImport("libgd", EntryPoint="CSharp_gdEdged_get")]
  public static extern int gdEdged_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageFilledArc")]
  public static extern void gdImageFilledArc(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdImageArc")]
  public static extern void gdImageArc(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8);

  [DllImport("libgd", EntryPoint="CSharp_gdImageEllipse")]
  public static extern void gdImageEllipse(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFilledEllipse")]
  public static extern void gdImageFilledEllipse(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFillToBorder")]
  public static extern void gdImageFillToBorder(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFill")]
  public static extern void gdImageFill(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopy")]
  public static extern void gdImageCopy(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopyMerge")]
  public static extern void gdImageCopyMerge(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopyMergeGray")]
  public static extern void gdImageCopyMergeGray(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopyResized")]
  public static extern void gdImageCopyResized(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9, int jarg10);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopyResampled")]
  public static extern void gdImageCopyResampled(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9, int jarg10);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCopyRotated")]
  public static extern void gdImageCopyRotated(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);

  [DllImport("libgd", EntryPoint="CSharp_gdImageClone")]
  public static extern IntPtr gdImageClone(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetBrush")]
  public static extern void gdImageSetBrush(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetTile")]
  public static extern void gdImageSetTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetAntiAliased")]
  public static extern void gdImageSetAntiAliased(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetAntiAliasedDontBlend")]
  public static extern void gdImageSetAntiAliasedDontBlend(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetStyle")]
  public static extern void gdImageSetStyle(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetThickness")]
  public static extern void gdImageSetThickness(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageInterlace")]
  public static extern void gdImageInterlace(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageAlphaBlending")]
  public static extern void gdImageAlphaBlending(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSaveAlpha")]
  public static extern void gdImageSaveAlpha(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageNeuQuant")]
  public static extern IntPtr gdImageNeuQuant(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImagePixelate")]
  public static extern int gdImagePixelate(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_sub_set")]
  public static extern void gdScatter_sub_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_sub_get")]
  public static extern int gdScatter_sub_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_plus_set")]
  public static extern void gdScatter_plus_set(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_plus_get")]
  public static extern int gdScatter_plus_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_num_colors_set")]
  public static extern void gdScatter_num_colors_set(HandleRef jarg1, uint jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_num_colors_get")]
  public static extern uint gdScatter_num_colors_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_colors_set")]
  public static extern void gdScatter_colors_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_colors_get")]
  public static extern IntPtr gdScatter_colors_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_seed_set")]
  public static extern void gdScatter_seed_set(HandleRef jarg1, uint jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdScatter_seed_get")]
  public static extern uint gdScatter_seed_get(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_new_gdScatter")]
  public static extern IntPtr new_gdScatter();

  [DllImport("libgd", EntryPoint="CSharp_delete_gdScatter")]
  public static extern void delete_gdScatter(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScatter")]
  public static extern int gdImageScatter(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScatterColor")]
  public static extern int gdImageScatterColor(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScatterEx")]
  public static extern int gdImageScatterEx(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSmooth")]
  public static extern int gdImageSmooth(HandleRef jarg1, float jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageMeanRemoval")]
  public static extern int gdImageMeanRemoval(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageEmboss")]
  public static extern int gdImageEmboss(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGaussianBlur")]
  public static extern int gdImageGaussianBlur(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageEdgeDetectQuick")]
  public static extern int gdImageEdgeDetectQuick(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSelectiveBlur")]
  public static extern int gdImageSelectiveBlur(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageConvolution")]
  public static extern int gdImageConvolution(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdImageColor")]
  public static extern int gdImageColor(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("libgd", EntryPoint="CSharp_gdImageContrast")]
  public static extern int gdImageContrast(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageBrightness")]
  public static extern int gdImageBrightness(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGrayScale")]
  public static extern int gdImageGrayScale(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageNegate")]
  public static extern int gdImageNegate(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdNewFileCtx")]
  public static extern IntPtr gdNewFileCtx(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdNewDynamicCtx")]
  public static extern IntPtr gdNewDynamicCtx(int jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdNewDynamicCtxEx")]
  public static extern IntPtr gdNewDynamicCtxEx(int jarg1, HandleRef jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdNewSSCtx")]
  public static extern IntPtr gdNewSSCtx(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdDPExtractData")]
  public static extern IntPtr gdDPExtractData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_GD2_CHUNKSIZE_get")]
  public static extern int GD2_CHUNKSIZE_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_CHUNKSIZE_MIN_get")]
  public static extern int GD2_CHUNKSIZE_MIN_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_CHUNKSIZE_MAX_get")]
  public static extern int GD2_CHUNKSIZE_MAX_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_VERS_get")]
  public static extern int GD2_VERS_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_ID_get")]
  public static extern string GD2_ID_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_FMT_RAW_get")]
  public static extern int GD2_FMT_RAW_get();

  [DllImport("libgd", EntryPoint="CSharp_GD2_FMT_COMPRESSED_get")]
  public static extern int GD2_FMT_COMPRESSED_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageCompare")]
  public static extern int gdImageCompare(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFlipHorizontal")]
  public static extern void gdImageFlipHorizontal(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFlipVertical")]
  public static extern void gdImageFlipVertical(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageFlipBoth")]
  public static extern void gdImageFlipBoth(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_GD_FLIP_HORINZONTAL_get")]
  public static extern int GD_FLIP_HORINZONTAL_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_FLIP_VERTICAL_get")]
  public static extern int GD_FLIP_VERTICAL_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_FLIP_BOTH_get")]
  public static extern int GD_FLIP_BOTH_get();

  [DllImport("libgd", EntryPoint="CSharp_gdImageCrop")]
  public static extern IntPtr gdImageCrop(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCropAuto")]
  public static extern IntPtr gdImageCropAuto(HandleRef jarg1, uint jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageCropThreshold")]
  public static extern IntPtr gdImageCropThreshold(HandleRef jarg1, uint jarg2, float jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageSetInterpolationMethod")]
  public static extern int gdImageSetInterpolationMethod(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageGetInterpolationMethod")]
  public static extern int gdImageGetInterpolationMethod(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScaleBilinear")]
  public static extern IntPtr gdImageScaleBilinear(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScaleBicubic")]
  public static extern IntPtr gdImageScaleBicubic(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScaleBicubicFixed")]
  public static extern IntPtr gdImageScaleBicubicFixed(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScaleNearestNeighbour")]
  public static extern IntPtr gdImageScaleNearestNeighbour(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageScale")]
  public static extern IntPtr gdImageScale(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotate90")]
  public static extern IntPtr gdImageRotate90(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotate180")]
  public static extern IntPtr gdImageRotate180(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotate270")]
  public static extern IntPtr gdImageRotate270(HandleRef jarg1, int jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotateNearestNeighbour")]
  public static extern IntPtr gdImageRotateNearestNeighbour(HandleRef jarg1, float jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotateBilinear")]
  public static extern IntPtr gdImageRotateBilinear(HandleRef jarg1, float jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotateBicubicFixed")]
  public static extern IntPtr gdImageRotateBicubicFixed(HandleRef jarg1, float jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotateGeneric")]
  public static extern IntPtr gdImageRotateGeneric(HandleRef jarg1, float jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdImageRotateInterpolated")]
  public static extern IntPtr gdImageRotateInterpolated(HandleRef jarg1, float jarg2, int jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineApplyToPointF")]
  public static extern int gdAffineApplyToPointF(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineInvert")]
  public static extern int gdAffineInvert(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineFlip")]
  public static extern int gdAffineFlip(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineConcat")]
  public static extern int gdAffineConcat(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineIdentity")]
  public static extern int gdAffineIdentity(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineScale")]
  public static extern int gdAffineScale(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineRotate")]
  public static extern int gdAffineRotate(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineShearHorizontal")]
  public static extern int gdAffineShearHorizontal(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineShearVertical")]
  public static extern int gdAffineShearVertical(HandleRef jarg1, double jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineTranslate")]
  public static extern int gdAffineTranslate(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineExpansion")]
  public static extern double gdAffineExpansion(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineRectilinear")]
  public static extern int gdAffineRectilinear(HandleRef jarg1);

  [DllImport("libgd", EntryPoint="CSharp_gdAffineEqual")]
  public static extern int gdAffineEqual(HandleRef jarg1, HandleRef jarg2);

  [DllImport("libgd", EntryPoint="CSharp_gdTransformAffineGetImage")]
  public static extern int gdTransformAffineGetImage(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("libgd", EntryPoint="CSharp_gdTransformAffineCopy")]
  public static extern int gdTransformAffineCopy(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("libgd", EntryPoint="CSharp_gdTransformAffineBoundingBox")]
  public static extern int gdTransformAffineBoundingBox(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_IMAGE_get")]
  public static extern int GD_CMP_IMAGE_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_NUM_COLORS_get")]
  public static extern int GD_CMP_NUM_COLORS_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_COLOR_get")]
  public static extern int GD_CMP_COLOR_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_SIZE_X_get")]
  public static extern int GD_CMP_SIZE_X_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_SIZE_Y_get")]
  public static extern int GD_CMP_SIZE_Y_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_TRANSPARENT_get")]
  public static extern int GD_CMP_TRANSPARENT_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_BACKGROUND_get")]
  public static extern int GD_CMP_BACKGROUND_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_INTERLACE_get")]
  public static extern int GD_CMP_INTERLACE_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_CMP_TRUECOLOR_get")]
  public static extern int GD_CMP_TRUECOLOR_get();

  [DllImport("libgd", EntryPoint="CSharp_GD_RESOLUTION_get")]
  public static extern int GD_RESOLUTION_get();

  [DllImport("libgd", EntryPoint="CSharp_gdMajorVersion")]
  public static extern int gdMajorVersion();

  [DllImport("libgd", EntryPoint="CSharp_gdMinorVersion")]
  public static extern int gdMinorVersion();

  [DllImport("libgd", EntryPoint="CSharp_gdReleaseVersion")]
  public static extern int gdReleaseVersion();

  [DllImport("libgd", EntryPoint="CSharp_gdExtraVersion")]
  public static extern string gdExtraVersion();

  [DllImport("libgd", EntryPoint="CSharp_gdVersionString")]
  public static extern string gdVersionString();
}

}
